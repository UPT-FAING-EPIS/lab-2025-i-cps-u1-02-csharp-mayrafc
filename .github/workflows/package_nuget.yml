name: Package and Analyze with SonarCloud

on:
  push:
    branches:
      - main  # Se ejecuta cuando hay un push a la rama principal

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Configurar .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Paso 3: Restaurar dependencias (ajustar la ruta de tu archivo .csproj si es necesario)
      - name: Restore dependencies
        run: dotnet restore src/Bank.Domain/Bank.Domain.csproj  # Ajusta la ruta según sea necesario

      # Paso 4: Ejecutar pruebas unitarias
      - name: Run Unit Tests
        run: dotnet test --no-build --verbosity normal

      # Paso 5: Análisis con SonarCloud
      - name: SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          organization: 'apibankk'
          projectKey: 'apibankk_lab2'
          projectName: 'lab2'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Paso 6: Construir el proyecto
      - name: Build .NET Project
        run: dotnet build src/Bank.Domain/Bank.Domain.csproj --configuration Release  # Ajusta la ruta si es necesario

      # Paso 7: Crear paquete NuGet
      - name: Create NuGet Package
        run: dotnet pack src/Bank.Domain/Bank.Domain.csproj --configuration Release --output ./nuget  # Ajusta la ruta si es necesario

      # Paso 8: Publicar paquete NuGet en GitHub Packages
      - name: Publish NuGet Package
        run: |
          dotnet nuget push ./nuget/*.nupkg \
            --source "github" \
            --api-key ${{ secrets.GITHUB_TOKEN }}
