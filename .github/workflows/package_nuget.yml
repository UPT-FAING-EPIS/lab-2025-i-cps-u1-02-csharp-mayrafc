name: .NET Build and Publish NuGet Package

on:
  push:
    branches:
      - main  # Ejecuta en cada push a la rama principal
  pull_request:
    branches:
      - main  # Ejecuta en pull requests hacia la rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Configurar .NET
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'  # Versión de .NET

    # Paso 2: Checkout del código fuente
    - name: Checkout repository
      uses: actions/checkout@v2

    # Paso 3: Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore Bank/Bank.WebApi/Bank.WebApi.csproj  # Restaura las dependencias del proyecto

    # Paso 4: Ejecutar pruebas unitarias
    - name: Run unit tests
      run: dotnet test Bank/Bank.WebApi/Bank.WebApi.csproj --logger "trx" --results-directory ./TestResults

    # Paso 5: Análisis con SonarCloud
    - name: SonarCloud Analysis
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.projectKey=apibankk_lab2
          -Dsonar.organization=apibankk
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.scm.revision=main
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Token de SonarCloud

   # Paso 6: Crear el directorio ./nupkgs si no existe
    - name: Create nupkgs directory if not exists
      run: mkdir -p ./nupkgs  # Aseguramos que el directorio existe antes de generar el paquete

    # Paso 7: Construir el paquete NuGet
    - name: Build NuGet Package
      run: |
        dotnet pack Bank/Bank.WebApi/Bank.WebApi.csproj -o ./nupkgs
        echo "Listing contents of ./nupkgs:"
        ls -la ./nupkgs  # Verificamos los archivos generados

    # Paso 8: Verificar si se generó el archivo .nupkg
    - name: Verify .nupkg file
      run: |
        if [ -f ./nupkgs/*.nupkg ]; then
          echo ".nupkg file found!"
        else
          echo "No .nupkg file found, aborting publish step!"
          exit 1  # Abortamos si el archivo no se encuentra
        fi

    # Paso 9: Publicar el paquete NuGet en GitHub Packages
    - name: Publish NuGet Package to GitHub Packages
      run: |
        dotnet nuget add source "https://nuget.pkg.github.com/mayrafc/index.json" \
          --name github \
          --username mayrafc \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text

        dotnet nuget push ./nupkgs/*.nupkg --source "github"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Este token es automático, no necesitas configurarlo manualmente.
