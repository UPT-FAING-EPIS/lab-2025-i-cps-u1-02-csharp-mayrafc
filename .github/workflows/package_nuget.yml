name: .NET Build and Publish NuGet Package

on:
  push:
    branches:
      - main  # Ejecuta en cada push a la rama principal
  pull_request:
    branches:
      - main  # Ejecuta en pull requests hacia la rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Configurar .NET
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'  # Versión de .NET

    # Paso 2: Checkout del código fuente
    - name: Checkout repository
      uses: actions/checkout@v2

    # Paso 3: Restaurar dependencias
    - name: Restore dependencies
      run: dotnet restore Bank/Bank.WebApi/Bank.WebApi.csproj

    # Paso 4: Ejecutar pruebas unitarias
    - name: Run unit tests
      run: dotnet test Bank/Bank.WebApi/Bank.WebApi.csproj --logger "trx" --results-directory ./TestResults

    # Paso 5: Análisis con SonarCloud
    - name: SonarCloud Analysis
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        organization: apibankk                # <- Organización en SonarCloud
        projectKey: apibankk_lab2             # <- Clave del proyecto en SonarCloud
        projectBaseDir: Bank                  # <- Ruta donde está el .csproj o solución
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Paso 6: Construir el paquete NuGet
    - name: Build NuGet Package
      run: dotnet pack Bank/Bank.Domain/Bank.Domain.csproj -o ./nupkgs

    # Paso 7: Publicar el paquete NuGet en GitHub Packages
    - name: Publish NuGet Package to GitHub Packages
      run: dotnet nuget push ./nupkgs/*.nupkg --source "github" --api-key ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
